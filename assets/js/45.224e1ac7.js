(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{538:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("前端工程師，在 SPA 盛行的今日，網頁載入的資源常常是很大的 JS 檔案、CSS 檔案或是很多張圖片，容易造成開啟網站時，空白頁面暫留過久的問題，導致使用者體驗不佳。而在優化載入速度的時候，除了盡可能把資源檔案縮小、壓縮、加載延遲等等，最重要的還是理解瀏覽器是如何載入資源到渲染畫面的步驟，從中盡可能找到優化的方向，使用 chrome 的開發者工具，就可以把整個載入至繪製的流程一覽無遺。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://miro.medium.com/max/700/0*k2OCxTjN8Wey0AKi",alt:""}})]),t._v(" "),a("p",[t._v("瀏覽器將 HTML、CSS 和 Javascript 轉換成畫面上所呈現的像素內容，這之間所經歷的一切步驟。都稱為 Critical Rendering Path。因此，如果能優化關鍵渲染路徑，那就能提升網頁載入的速度，減少空白螢幕的時間。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/lNOUfiF.png",alt:""}})]),t._v(" "),a("p",[t._v("有兩個指標可以用來衡量網頁載入的速度：")]),t._v(" "),a("ol",[a("li",[t._v("關鍵資源數（Critical resources）：開始顯示頁面前，必須解析完畢的檔案數量。")]),t._v(" "),a("li",[t._v("最短關鍵路徑（Minimum critical path）：最少的 round trip 數量，從發出請求到收到回應稱為一次 round trip，若兩個關鍵資源同時發出請求，視為一次 round trip，用來估計總載入時間。")])]),t._v(" "),a("p",[t._v("由此可知，當數字越大，可以開始轉譯畫面的時間就會越慢。")]),t._v(" "),a("h2",{attrs:{id:"載入網站主要步驟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#載入網站主要步驟"}},[t._v("#")]),t._v(" 載入網站主要步驟：")]),t._v(" "),a("p",[t._v("使用者從載入到互動經過以下步驟：")]),t._v(" "),a("p",[t._v("Load HTML -> Parse HTML -> 載入、解析其他檔案 -> 繼續解析 HTML，重複以上步驟 -> 檔案都解析完畢後，開始轉譯畫面。")]),t._v(" "),a("h4",{attrs:{id:"例如"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如"}},[t._v("#")]),t._v(" 例如：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("style.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello World!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("An awesome image.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("ol",[a("li",[t._v("解析 HTML 至第 3 行時，開始載入 style.css （阻止頁面轉譯）。")]),t._v(" "),a("li",[t._v("解析 HTML 至第 7 行時，將圖片的載入加入排程。")]),t._v(" "),a("li",[t._v("解析 HTML 至第 8 行時，開始載入 index.js （阻止 HTML 解析）。")]),t._v(" "),a("li",[t._v("style.css 載入完成，開始解析。")]),t._v(" "),a("li",[t._v("index.js 載入完成，開始執行 （須等 style.css 解析完畢）。")]),t._v(" "),a("li",[t._v("解析 HTML 完成，開始轉譯頁面。")])]),t._v(" "),a("p",[t._v("可以看到必須等待 index.html、style.css 和 index.js 都解析完畢後才能開始顯示頁面，因次有三個關鍵資源，由於 css 和 js 可以同時下載，因此最短路徑為 2。")]),t._v(" "),a("h2",{attrs:{id:"html-轉化成-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-轉化成-dom"}},[t._v("#")]),t._v(" HTML 轉化成 DOM")]),t._v(" "),a("p",[t._v("HTML 規範包含了一組規則，規範了如何處理接收到的數據，像是 "),a("code",[t._v("<>")]),t._v(" 在文本中就具有特殊含義，標示一個標記(token)，每次產生一個 token，另一邊就會透過這些 token 來建構 node 節點，而節點間的關係就由 token 標記來決定，Start token 和 End token 之間包含子節點。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/Z2FlCI7.png",alt:""}})]),t._v(" "),a("p",[t._v("每個節點其實都會包含本身的屬性，例如 img 標籤的 src。")]),t._v(" "),a("blockquote",[a("p",[t._v("重要的一點是 DOM 是增量創建的，HTML 不會一次全部返回，而是逐漸地、部分地返回，以便它們可以首先被呈現。這些特性有利於性能優化。")])]),t._v(" "),a("h4",{attrs:{id:"優化-html-解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#優化-html-解析"}},[t._v("#")]),t._v(" 優化 HTML 解析")]),t._v(" "),a("p",[t._v("從 Google search 頁面就可以看出來，在還沒搜索前，他就會先渲染出 Header，搜尋結果等到搜尋完才會顯示，瀏覽器不用等待所有的 HTML 都好了再做處理，透過這樣的方式，只返回部分 HTML 是一個很好的性能優化策略。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/O3DagkL.png",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://i.imgur.com/KUtfQgX.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"css-轉換成-cssom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-轉換成-cssom"}},[t._v("#")]),t._v(" CSS 轉換成 CSSOM")]),t._v(" "),a("p",[t._v("同樣的，CSS 會被轉換成 CSS Object Model，瀏覽器也有針對 CSS 分析的規則。不過與 HTML 解析不同的地方在於，他不能分段解析，一定要全部解析完才能轉譯畫面，因次會造成效能堵塞，Tailwindcss 就是希望能降低 CSS 解析的時間，才盡可能縮小編譯出來的 CSS 檔案。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 16px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("與 HTML 解析類似，將收到 CSS 樣式(inline or "),a("code",[t._v("<link>")]),t._v(")轉換為瀏覽器可以處理的內容：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/images/cssom-construction.png",alt:""}})]),t._v(" "),a("p",[t._v("轉換成 token 和 node，最後連結到整個樹狀結構上，稱為「CSS 物件模型」，或縮寫為 CSSOM：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/images/cssom-tree.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"為什麼不能分段解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#為什麼不能分段解析"}},[t._v("#")]),t._v(" 為什麼不能分段解析？")]),t._v(" "),a("p",[t._v("因為 CSS 是屬於疊層規則跟疊層樣式表，當 body 的 font-size 為 16px 時，下一層若是沒有標記 font-size 默認會是 body 的 font-size 值，同樣的我們後面樣式的權重也會覆蓋到前面樣式。")]),t._v(" "),a("p",[t._v("如果分段解析並繪製到畫面上的話，會導致上一秒可能是另一個樣子，下一秒就會變成另一個樣子，所以才不能分段解析。而由於這樣的限制，導致如果 css 樣式檔案過於肥大，就會造成網頁開啟時，效能體驗不佳。")]),t._v(" "),a("h4",{attrs:{id:"computedstyle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computedstyle"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-TW/docs/Web/API/Window/getComputedStyle",target:"_blank",rel:"noopener noreferrer"}},[t._v("ComputedStyle"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("建構完成 CSSOM 之後，接著就會跟 DOM 中對應的節點做結合，並計算該節點 render 的時間。Web API 就有提供 getComputedStyle 來讓我們或的該節點的 ComputedStyle，每個 ComputedStyle 都會包含 Style property、value 等物件，整個過程就是 Recalculate style，在開發者工具欄位也可以看到。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/0iFeT62.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"render-blocking-css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render-blocking-css"}},[t._v("#")]),t._v(" Render-Blocking CSS")]),t._v(" "),a("p",[t._v("CSS 在頁面載入行為裡，是屬於鎖定渲染的資源 - Render Blocking Resource，意思是，在頁面仔入時，只要還沒有拿到所有的 CSS 檔案並成功載入，那瀏覽器就會等到完成載入為止，這意味著，每個網頁上的 CSS 檔案，都會拖到載入速度。")]),t._v(" "),a("h2",{attrs:{id:"the-render-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-render-tree"}},[t._v("#")]),t._v(" The Render Tree")]),t._v(" "),a("p",[t._v("現在，我們有 DOM tree 以及 CSSOM tree，接下來就是要把這兩者做結合，然後轉換成像素畫面呈現給使用者。在繪製到畫面前，會先生成一個 render tree 來針對畫面該出現的元素進行繪製。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/images/render-tree-construction.png",alt:""}})]),t._v(" "),a("p",[t._v("為了建立 render tree，瀏覽器會執行下面幾個步驟：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("DOM tree 解析，像是 head、script、meta 等標籤，由於不需要顯示在畫面上，引此這類型的節點會忽略，剩餘的節點在對應到 CSSOM tree 上，如果 display 屬性值為 none，則也忽略不繪製。")])]),t._v(" "),a("li",[a("p",[t._v("為每個可以顯示的 DOM node 找到 CSSOM tree 上的樣式規則，並套用之。")])]),t._v(" "),a("li",[a("p",[t._v("發送 Node，包含內容跟樣式。")])])]),t._v(" "),a("p",[t._v("結束後就會得到一個 render tree，才會正式進入到版面配置。")]),t._v(" "),a("h4",{attrs:{id:"小測驗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小測驗"}},[t._v("#")]),t._v(" 小測驗")]),t._v(" "),a("p",[t._v("給你一個 DOM tree 跟 CSS 樣式表，請問畫面出現的文字是？以及文字的顏色？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/sHQPOYc.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"layout-畫面配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#layout-畫面配置"}},[t._v("#")]),t._v(" Layout 畫面配置")]),t._v(" "),a("p",[t._v("當 render tree 生成之後，其實每的 node 在畫面上的大小、位置都還沒有確定下來。為了計算出準確的大小、位置，瀏覽器會從 render tree 上的根節點開始，計算每個物件的幾何形狀。")]),t._v(" "),a("p",[t._v("開發者工具裡面也可以看到 layout 的情形：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/z31YO9Q.png",alt:""}})]),t._v(" "),a("p",[t._v("總共花 0.1 ms 來進行 layout，根節點為 document。")]),t._v(" "),a("h4",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),a("meta",{attrs:{name:"viewport",content:"width=device-width,initial-scale=1"}})]),t._v(" "),a("p",[t._v("還記得這段 tag 是做什麼的嗎？主要是告訴瀏覽器，佈局視口的寬度應該等於設備寬度，例如如果設備寬度等於 320px，那麼這個 tag 的功能就是告訴瀏覽器，我畫面的寬度就是 320px，若沒有這個標記，瀏覽器預設視口寬度是 980px，不會隨著設備而改變。當設備旋轉時，視口寬度就會改變，瀏覽器就會重新佈局。")]),t._v(" "),a("p",[t._v("網站到佈局階段時，才會依照 style 的 width height display...等等佈局屬性，來計算真實位址與大小，所以會與設備寬度有很大的關係。")]),t._v(" "),a("h4",{attrs:{id:"layout-會造成什麼效能瓶頸呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#layout-會造成什麼效能瓶頸呢"}},[t._v("#")]),t._v(" Layout 會造成什麼效能瓶頸呢？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/TqeV7cH.png",alt:""}})]),t._v(" "),a("p",[t._v("網路上其中一個網站為例，因為網站執行時，其實會在短時間內因為 javascript 而進行多次的頁面更新(重新佈局)，因次若是每次都重新佈局都很耗效能，那就會造成空白畫面延遲。")]),t._v(" "),a("h2",{attrs:{id:"paint-繪製"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#paint-繪製"}},[t._v("#")]),t._v(" Paint 繪製")]),t._v(" "),a("p",[t._v("在版面配置完成後，瀏覽器便會觸發「Paint Setup」和「Paint」事件，將 render tree 結構轉化為螢幕上的實際像素。由下圖可以看出網頁在開啟時，也會進行多次繪製。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/mwuMuov.png",alt:""}})]),t._v(" "),a("p",[t._v("當畫面配置更新時，瀏覽器會嘗試重新繪製會底請求的區域，但這都取決於 render tree 因為什麼原因更新。")]),t._v(" "),a("h4",{attrs:{id:"小測驗-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小測驗-2"}},[t._v("#")]),t._v(" 小測驗")]),t._v(" "),a("p",[t._v("根據圖片提供的 html 檔案，嘗試把頁面渲染的步驟排序出來。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/UKdQKos.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("產生 DOM tree")]),t._v(" "),a("li",[t._v("產生 CSSOM tree")]),t._v(" "),a("li",[t._v("版面配置並且繪製在畫面上")]),t._v(" "),a("li",[t._v("載入 CSS && JS 資源")]),t._v(" "),a("li",[t._v("執行 JS")]),t._v(" "),a("li",[t._v("結合 DOM 和 CSSOM 產生 Render tree")])]),t._v(" "),a("h2",{attrs:{id:"domcontentloaded-與-load-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded-與-load-事件"}},[t._v("#")]),t._v(" DOMContentLoaded 與 load 事件")]),t._v(" "),a("p",[t._v("網頁載入時，都會包含這兩個事件，以確保網頁的資源都載入完畢，Javascript 才能存取到對應的 DOM 節點。那這兩者差別在哪裡呢？先看一張圖：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://d1dwq032kyr03c.cloudfront.net/upload/images/20171219/20065504och2Xekk7T.png",alt:""}})]),t._v(" "),a("p",[t._v("看圖就會很明顯的知道說，DOMContentLoaded 是在 DOM tree 完成後就會觸發的，而 load 會在整個網站資源跟繪製完成後才會觸法。因此我們剛學習寫網頁的時候不是都會這樣寫：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'load'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All resources finished loading!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("或是 JQuery：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ready")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ready!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("以及 script 放到 body 底下等等。都是要確保資源載入完成，在執行我們所要操作畫面的 Javascript 腳本。")]),t._v(" "),a("h4",{attrs:{id:"從開發者工具看-load-時間"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#從開發者工具看-load-時間"}},[t._v("#")]),t._v(" 從開發者工具看 load 時間")]),t._v(" "),a("p",[t._v("chrome 開發者工具就可以看到，整個網頁載入 DOM 的時間以及資源載入完成的時間。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/ZNsHvJ3.png",alt:""}})]),t._v(" "),a("p",[t._v("這個網站整個載入到完成(finish)，總共花費 36 毫秒，DOMContentLoaded 時間點是在 14 毫秒，然後 load 時間是 36 毫秒。")]),t._v(" "),a("p",[t._v("其中，網站有一個圖片的資源，他在第 13.62 毫秒開始發送請求，可以看到說，我們無需等待網頁上的每個資源，即可建構轉譯樹狀結構，甚至是繪製網頁: "),a("strong",[t._v("快速初次繪製並不需要所有資源")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"總結"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#總結"}},[t._v("#")]),t._v(" 總結")]),t._v(" "),a("p",[t._v("以上就是這次想對於關鍵渲染路徑步驟，相信看完之後。其實對於瀏覽器如何解析 html 檔案到產生畫面的已經心中有概念了，並且默默地也大概知道哪些步驟是可以進行優化，下一篇就來討論如何透過關鍵渲染路徑的優化來加速我們網頁呈現的速度。至於 javascript 是在頁面繪製、重排中扮演很重要的角色。")])])}),[],!1,null,null,null);s.default=e.exports}}]);