(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{588:function(r,t,a){"use strict";a.r(t);var e=a(15),s=Object(e.a)({},(function(){var r=this,t=r.$createElement,a=r._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("p",[r._v("Docker 是一個很偉大的技術，讓應用程式的分配、佈署和管理都得到以前沒有得效率。Docker 專案的目標是實作輕量級的作業系統虛擬化解決方案，基礎是 Linux 容器（LXC）等技術。容器的使用，讓傳統的虛擬機望其項背，一台主機上又可以執行多個 Docker 容器，基本不消耗額外的系統資源，使得應用的效能很高。")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/XGbBvkN.png",alt:""}})]),r._v(" "),a("h2",{attrs:{id:"什麼是-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什麼是-docker"}},[r._v("#")]),r._v(" 什麼是 Docker")]),r._v(" "),a("p",[r._v("一種容器化技術，透過軟體的方式，有效的分配 O.S 的資源，讓每個應用程式可以獨立運作、彼此獨立。")]),r._v(" "),a("h2",{attrs:{id:"部署演進史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署演進史"}},[r._v("#")]),r._v(" 部署演進史")]),r._v(" "),a("h3",{attrs:{id:"問題起源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#問題起源"}},[r._v("#")]),r._v(" 問題起源：")]),r._v(" "),a("p",[r._v("在一台主機上的 O.S 佈署多個應用程式，但當一個應用程式壞掉或出問題了，因為是共享 O.S 的關係，導致連帶影響其他正常的應用程式，出現服務中斷或是主機壞掉等問題。")]),r._v(" "),a("h3",{attrs:{id:"解決方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解決方式"}},[r._v("#")]),r._v(" 解決方式：")]),r._v(" "),a("ol",[a("li",[r._v("傳統主機模式")]),r._v(" "),a("li",[r._v("VM模式")]),r._v(" "),a("li",[a("span",{staticStyle:{color:"red"}},[r._v("容器模式")])])]),r._v(" "),a("h4",{attrs:{id:"傳統主機模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#傳統主機模式"}},[r._v("#")]),r._v(" 傳統主機模式")]),r._v(" "),a("p",[r._v("透過一台主機一個作業系統一個應用程式的配置，可以有效的阻止當一個應用程式壞掉時，導致其他應用程式也被連帶影響。")]),r._v(" "),a("blockquote",[a("p",[r._v("缺點：耗費資源，浪費錢。")])]),r._v(" "),a("h4",{attrs:{id:"virtual-machine-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtual-machine-模式"}},[r._v("#")]),r._v(" Virtual Machine 模式")]),r._v(" "),a("p",[r._v("透過 Hypervisor 提供虛擬化的技術，讓一台主機上實現多個 O.S，並每個 O.S 配置一個應用程式，讓各個應用程式彼此獨立運作。")]),r._v(" "),a("blockquote",[a("p",[r._v("缺點：每一個 application 都要重新啟動一個 VM 並用一個 OS 來作前置動作，也是很耗費資源，通常會導致部署時間長。")])]),r._v(" "),a("h4",{attrs:{id:"容器模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器模式"}},[r._v("#")]),r._v(" "),a("span",{staticStyle:{color:"red"}},[r._v("容器模式")])]),r._v(" "),a("p",[r._v("透過 Docker engine，分配作業系統的資源給需要的容器，例如記憶體、CPU 或是硬體空間等。")]),r._v(" "),a("blockquote",[a("p",[r._v("優點：容器是用軟體製造的虛擬空間，跟"),a("span",{staticStyle:{color:"red"}},[r._v("一個 OS ")]),r._v("要資源，而同時每個容器間彼此獨立。")])]),r._v(" "),a("h2",{attrs:{id:"三大功用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三大功用"}},[r._v("#")]),r._v(" 三大功用")]),r._v(" "),a("h3",{attrs:{id:"簡化佈署流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#簡化佈署流程"}},[r._v("#")]),r._v(" 簡化佈署流程")]),r._v(" "),a("p",[r._v("一般佈署流程是先拿到程式碼，再來建立環境，最後用指令讓程式碼跑起來。")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/gqV3xiE.png",alt:""}})]),r._v(" "),a("p",[r._v("缺點：")]),r._v(" "),a("ol",[a("li",[r._v("安裝環境耗費很多時間。")]),r._v(" "),a("li",[r._v("安裝指令可能會有很多人為失誤，一次啟動就要好幾十個指令。")])]),r._v(" "),a("p",[r._v("透過 Docker 可以把這三個步驟一次包裝成一個程式佈署包。之後只要一個指令把佈署包的內容跑起來就好，既能避免使用有很又效率。")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/tYMzxbb.png",alt:""}})]),r._v(" "),a("h3",{attrs:{id:"跨平台佈署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨平台佈署"}},[r._v("#")]),r._v(" 跨平台佈署")]),r._v(" "),a("p",[r._v("無論是 Linux、MacOS 或是 Windows 只要透過 Docker engine 建立容器，就可以在容器內產生相同環境來佈署同一個程式佈署包的內容。")]),r._v(" "),a("p",[r._v("而程式佈署包可以上傳到 Docker Hub (雲端空間)，只要下載下來就可以在不同平台上佈署。")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/38lk251.png",alt:""}})]),r._v(" "),a("h3",{attrs:{id:"建立乾淨測試環境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建立乾淨測試環境"}},[r._v("#")]),r._v(" 建立乾淨測試環境")]),r._v(" "),a("p",[r._v("同樣我們也可以運用在資料庫的打包方面，測試資料、資料庫安裝以及 SQL 安裝指令，只需要透過 Docker 打包成一個資料庫佈署包。")]),r._v(" "),a("p",[r._v("現在我們有程式佈署包以及資料庫佈署包，就可以透過容器開啟一個全新的環境進行測試，測試完畢後在清空環境釋放資源。")]),r._v(" "),a("p",[r._v("當發布不同版本的應用軟體時，一個指令就可以跑完整個測試流程。")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/T5P5lqN.png",alt:""}})]),r._v(" "),a("h2",{attrs:{id:"不同作業系統安裝-docker-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同作業系統安裝-docker-方式"}},[r._v("#")]),r._v(" 不同作業系統安裝 Docker 方式")]),r._v(" "),a("h3",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[r._v("#")]),r._v(" Linux")]),r._v(" "),a("p",[r._v("安裝完 Docker Engine 後，Linux 可以透過 Linux Container 管理並分配 Docker Container 的資源。")]),r._v(" "),a("p",[r._v("因此作業系統如果是 Linux 只需要去安裝 Docker Engine，就可以使用容器化技術了。")]),r._v(" "),a("h3",{attrs:{id:"macos-windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macos-windows"}},[r._v("#")]),r._v(" MacOS & Windows")]),r._v(" "),a("p",[r._v("因為 MacOS 和 Windows 的作業系統底層沒有提供像是 Linux Container 來跟 Docker Engine 溝通，但我們可以透過虛擬機的方式，無論是安裝 Virtual Box 或是 MacOS & Windows 原生提供的虛擬機技術，都要在上面建立 Linux 的虛擬環境，透過這個環境就可以使用 Docker Engine。")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/xLgTpAs.png",alt:""}})]),r._v(" "),a("h2",{attrs:{id:"dockerfile、docker-image-docker-container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile、docker-image-docker-container"}},[r._v("#")]),r._v(" Dockerfile、Docker image & Docker Container")]),r._v(" "),a("p",[r._v("最後我們先來簡單了解一下 Dockerfile、Docker image 和 Docker Container，這三者間的關係。")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/eBj3Jtl.png",alt:""}})]),r._v(" "),a("p",[r._v("我們可以把 Dockerfile 看成一個工廠，而這個工廠需要產生一個產品，需要原料，這些原料包含 source code、base image 以及 other inputs，當 Dockerfile 拿到這些原料之後，會去產出一個叫做 docker image 的產品，當我們拿到了 docker image 之後，實際的部署運用會放到一個叫做 docker container 的虛擬空間中運行，這樣我們就可以去使用這個 docker image 產品所提供的相關功能。以上我們就了解了 dockerfile docker image 以及 docker container 這三者彼此的階層關係。")]),r._v(" "),a("h5",{attrs:{id:"來源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#來源"}},[r._v("#")]),r._v(" 來源：")]),r._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://philipzheng.gitbook.io/docker_practice/",target:"_blank",rel:"noopener noreferrer"}},[r._v("《Docker —— 從入門到實踐­》正體中文版"),a("OutboundLink")],1)]),r._v(" "),a("li",[a("a",{attrs:{href:"https://hahow.in/courses/5df27f1fa5ee510022a08500/discussions",target:"_blank",rel:"noopener noreferrer"}},[r._v("Docker 部署入門完全指南-圖片速學攻略"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);