(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{610:function(t,a,s){"use strict";s.r(a);var n=s(15),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("當開發的工具之間的管理，耦合度越來越大的時候，造成團隊之間的 commit 或是 log，沒有一個規範可循時，造成版本號的混亂，導致各個環境不知道改導入哪一版進行測試發布。而 Commitizen 出現很大的程度上解決了這個問題，雖然規範是人定的，要其他人照者做，剛開始會不太習慣，但是卻是為了維護以及共同開發有個好的基礎。")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("Lerna 不負責建構與測試，但是它提供了一種集中管理 packages 的自動化程式，開發人員不用再到其他不必要的功能做修改，也能更集中在 issue、feature 的開發，在根目錄下就可以知道 package 之間的依賴。")]),t._v(" "),s("p",[t._v("之前已經介紹過 Lerna 的初始化建構方式了，現在我們來看看要如何加入其他方便的工具來整合開發方式以及統一程式碼。")]),t._v(" "),s("h2",{attrs:{id:"commitizen-cz-lerna-changelog-的安装和使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitizen-cz-lerna-changelog-的安装和使用"}},[t._v("#")]),t._v(" Commitizen + cz-lerna-changelog 的安装和使用")]),t._v(" "),s("p",[t._v("commitizen 是微軟在 Angular 使用的一個 commit 提交規範的工具，他提供交互式問答，讓團隊可以更容易遵守 commit 的規範。")]),t._v(" "),s("p",[t._v("cz-lerna-changelog 是專門為 lerna 設計的提交模板，在交互的過程是會提示是否有影響其他 packages 的選擇。")]),t._v(" "),s("h3",{attrs:{id:"安裝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安裝"}},[t._v("#")]),t._v(" 安裝")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -d commitizen\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -d cz-lerna-changelog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("commitizen 可以安裝在全局，可以用在其他專案。")]),t._v(" "),s("li",[t._v("cz-lerna-changelog 安裝在本地，特別用於 lerna 的專案")])]),t._v(" "),s("h3",{attrs:{id:"使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),s("h4",{attrs:{id:"_1-初始化提交模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-初始化提交模板"}},[t._v("#")]),t._v(" 1. 初始化提交模板")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("commitizen init cz-lerna-changelog --save --save-exact\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"_2-改用-git-cz-提交修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-改用-git-cz-提交修改"}},[t._v("#")]),t._v(" 2. 改用 git cz 提交修改")]),t._v(" "),s("p",[t._v("只後我們只要提交 commit 的時候，就不用打 "),s("code",[t._v("git commit -m '...new something'")]),t._v("，改為：")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("git-cz 或 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cz\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("就可以開啟詢問式提交了，如圖：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.imgur.com/1cWD5f7.png",alt:""}})]),t._v(" "),s("p",[t._v("完畢後即可在 "),s("code",[t._v("git log")]),t._v(" 看到剛剛提交的內容了：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.imgur.com/eqDRRnE.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"_3-一般使用的模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-一般使用的模板"}},[t._v("#")]),t._v(" 3. 一般使用的模板")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-changelog"),s("OutboundLink")],1),t._v(" 以及 conventional-changelog-cli 是一般專案在使用的提交模板，裝在全域或是專案底下都可以：")]),t._v(" "),s("ol",[s("li",[t._v("安裝")])]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" conventional-changelog\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" conventional-changelog-cli\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("使用")])]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("commitizen init conventional-changelog --save --save-exact\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"commit-規範校驗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-規範校驗"}},[t._v("#")]),t._v(" Commit 規範校驗")]),t._v(" "),s("p",[t._v("雖然有 commitizen 可以幫助我們提交規範的 commit 內容，但是有時候還是會不小心使用到 "),s("code",[t._v("git commit -m ...")]),t._v(" 來提交內容。")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://www.npmjs.com/package/@commitlint/cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1),t._v("：可以在提交訊息時進行校驗，如果不符合規範則不讓提交，並且會提示。")]),t._v(" "),s("li",[t._v("husky：校驗可以利用 commitlint 來進行，但是校驗的時機就由 husky 來指定，husky 繼承了 git 下面所有得變動，若發生了 commit 或 push 都會觸法，這時候就可以阻止不正確的 commit 推到專案上了。")])]),t._v(" "),s("h3",{attrs:{id:"安裝-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安裝-2"}},[t._v("#")]),t._v(" 安裝")]),t._v(" "),s("p",[t._v("在需要的專案地下安裝：")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -d @commitlint/cli @commitlint/config-conventional\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -d -s husky\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"在-lerna-根目錄下面新增-commitlint-config-js-文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-lerna-根目錄下面新增-commitlint-config-js-文件"}},[t._v("#")]),t._v(" 在 lerna 根目錄下面新增 commitlint.config.js 文件")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commitlint.config.js")]),t._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@commitlint/config-conventional'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("指定相對應的規範。")]),t._v(" "),s("h3",{attrs:{id:"在-package-json-配置-husky"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-package-json-配置-husky"}},[t._v("#")]),t._v(" 在 package.json 配置 husky")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -E HUSKY_GIT_PARAMS"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("commit-msg 是提交 commit 的鉤子，會在 commit 觸發前執行對應的腳本。從而約束提交內容。")]),t._v(" "),s("h4",{attrs:{id:"如果隨便提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果隨便提交"}},[t._v("#")]),t._v(" 如果隨便提交")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.imgur.com/IPIB1G9.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("正確提交規範為： [commit-type]:title description")])]),t._v(" "),s("h3",{attrs:{id:"commit-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-type"}},[t._v("#")]),t._v(" commit-type")]),t._v(" "),s("ul",[s("li",[t._v("feat: 一個新特性")]),t._v(" "),s("li",[t._v("fix: 修了一個 Bug")]),t._v(" "),s("li",[t._v("docs: 更新了文件內容（比如改了 Readme）")]),t._v(" "),s("li",[t._v("style: 代碼的樣式美化，不涉及到功能修改（比如改了縮排）")]),t._v(" "),s("li",[t._v("refactor: 一些代碼結構上優化，既不是新特性也不是修 Bug（比如函數改個名字）")]),t._v(" "),s("li",[t._v("perf: 優化了性能的代碼改動")]),t._v(" "),s("li",[t._v("test: 新增或者修改已有的測試代碼")]),t._v(" "),s("li",[t._v("chore: 跟倉庫主要業務無關的構建/工程依賴/工具等功能改動（比如新增一個文檔生成工具）")])]),t._v(" "),s("h2",{attrs:{id:"結論"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#結論"}},[t._v("#")]),t._v(" 結論")]),t._v(" "),s("p",[t._v("文章講述 Lerna 的 commit 提交規範，但其實 Lerna 也可以用一般的提交規範，都靠團隊之間該如何決定合作方式了。\n最近公司團隊在重組，程式碼需要進行大量的重構，漸漸地想導入一些工具，讓開發可以更順利，同時遠端工作也漸漸的盛行，這樣的工具規範真的日漸重要，我也從一個開發者的眼光看到整個系統架構的痛點，多人合作的方式等等，希望這些記錄這些工具能幫助到真正需要的人。")]),t._v(" "),s("h5",{attrs:{id:"來源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#來源"}},[t._v("#")]),t._v(" 來源：")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://codingnote.cc/zh-hk/p/1600/",target:"_blank",rel:"noopener noreferrer"}},[t._v("基於 Lerna 管理 packages 的 Monorepo 項目最佳實踐"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/d264f88d13a49",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen的安装和使用（标准化Git的Commit Message）"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);