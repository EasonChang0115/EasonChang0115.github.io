(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{511:function(a,e,t){"use strict";t.r(e);var s=t(6),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Dockerfile 讓我們可以自己創造 image，可以更好更方便的建立部署或是測試的環境。Dockerfile 是一種文字格式的設定檔，可以透過 Dockerfile 快速建立自訂的映像檔(image)，換句話說，Dockerfile 就像是建置 Docker Image 的腳本。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://i.imgur.com/XGbBvkN.png",alt:""}})]),a._v(" "),t("p",[a._v("除了抓 docker hub 提供的 images 以外，我們也可以利用 Dockerfile 來創建屬於自己的 images，上傳到雲端給其他使用者下載。")]),a._v(" "),t("h2",{attrs:{id:"最基本指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最基本指令"}},[a._v("#")]),a._v(" 最基本指令")]),a._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" alpine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("latest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("LABEL")]),a._v(" description="),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"這是 LABEL 的範例"')]),a._v(" version="),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.0"')]),a._v(" owner="),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Pattern GO"')]),a._v(" maintainer="),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"JasonChang"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ENV")]),a._v(" workspace /var/www/localhost/htdocs/\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("workspace"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" apk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("update add apache2\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" rm "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("rf /var/cache/apk/*\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<h3>I am Jason. I am talking this great docker course.</h3>"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v(" index.html\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ENTRYPOINT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"httpd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-D"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"FOREGROUND"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("h4",{attrs:{id:"from"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[a._v("#")]),a._v(" FROM：")]),a._v(" "),t("p",[a._v("每個 Docker 都一定要有的指令，容器創建時要知道執行的基本 image 是什麼。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"label"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[a._v("#")]),a._v(" LABEL:")]),a._v(" "),t("blockquote",[t("p",[a._v("格式為 "),t("code",[a._v("LABEL <key>=<value> <key>=<value> ....")]),a._v("，")])]),a._v(" "),t("p",[a._v("設定映像檔的Metadata資訊，例如：作者、EMail、映像檔的說明等")]),a._v(" "),t("h4",{attrs:{id:"run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[a._v("#")]),a._v(" RUN：")]),a._v(" "),t("blockquote",[t("p",[a._v("格式為"),t("code",[a._v("RUN <command>")]),a._v(" 或 "),t("code",[a._v('RUN ["executable", "param1", "param2"]')]),a._v("。")])]),a._v(" "),t("p",[a._v("前者將在 shell 終端中運行命令，即 /bin/sh -c；\n後者則使用 exec 執行。指定使用其它終端可以透過第二種方式實作，例如 "),t("code",[a._v('RUN ["/bin/bash", "-c", "echo hello"]')]),a._v("。")]),a._v(" "),t("p",[a._v("每個 RUN 都是彼此獨立的，上一行的 RUN 並不會影響到下行 RUN 的執行，而 RUN 執行命令的地方都會是在容器的"),t("span",{staticStyle:{color:"red"}},[a._v("根目錄")]),a._v("下面。若是要執多行相關的指令，可以用 && 符號來連結，連接太長則可以用"),t("code",[a._v("\\")]),a._v("來換行。")]),a._v(" "),t("h4",{attrs:{id:"cmd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[a._v("#")]),a._v(" CMD:")]),a._v(" "),t("p",[a._v("支援三種格式")]),a._v(" "),t("blockquote",[t("ol",[t("li",[a._v('CMD ["executable", "param1", "param2"] 使用 exec 執行，推薦使用。')]),a._v(" "),t("li",[a._v("CMD command param1 param2 在 /bin/sh 中執行，使用在給需要互動的指令。")]),a._v(" "),t("li",[a._v('CMD ["param1", "param2"] 提供給 ENTRYPOINT 的預設參數。')])])]),a._v(" "),t("p",[a._v("指定啟動容器時執行的命令，"),t("span",{staticStyle:{color:"red"}},[a._v("每個 Dockerfile 只能有一條 CMD 命令")]),a._v("。如果指定了多條命令，只有最後一條會被執行。")]),a._v(" "),t("p",[a._v("如果使用者啟動容器時候指定了運行的命令，則會覆蓋掉 CMD 指定的命令。例如：執行"),t("code",[a._v("docker run <image id>")]),a._v("時，CMD所定義的指令會被執行，但當執行"),t("code",[a._v("docker run <image id> bash")]),a._v("時，Container 就會執行 bash，而原本 CMD 中定義的值就會覆蓋")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"entrypoint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint"}},[a._v("#")]),a._v(" ENTRYPOINT：")]),a._v(" "),t("p",[a._v("兩種格式：")]),a._v(" "),t("blockquote",[t("ol",[t("li",[a._v('ENTRYPOINT ["executable", "param1", "param2"]')]),a._v(" "),t("li",[a._v("ENTRYPOINT command param1 param2（shell中執行）。")])])]),a._v(" "),t("p",[a._v("指定容器啟動後執行的命令，並且不會被 docker run 提供的參數覆蓋。若有多個 ENTRYPOINT 則只會執行最後一個。")]),a._v(" "),t("p",[a._v("舉個實例，來看看ENTRYPOINT與CMD的關係，假設Dockerfile中的定義如下：")]),a._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ENTRYPOINT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/echo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"World"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("如果是使用 "),t("code",[a._v("docker run -it <image>")]),a._v(" 來啟動 Container，那麼輸出的結果為「Hello World」，但如果是用 "),t("code",[a._v("docker run -it <image>")]),a._v(" Docker來啟動，則輸出結果會變成「Hello Docker」，因為 CMD 的值被覆蓋掉了")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"workdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[a._v("#")]),a._v(" WORKDIR:")]),a._v(" "),t("blockquote",[t("p",[a._v("格式為 WORKDIR /path/to/workdir。")])]),a._v(" "),t("p",[a._v("為後續的 RUN、CMD、ENTRYPOINT 指令指定工作目錄。\n可以使用多個 WORKDIR 指令，後續命令如果參數是相對路徑，則會基於之前命令指定的路徑。例如")]),a._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /a\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" b\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" c\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" pwd\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("則最終路徑為 /a/b/c。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"expose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expose"}},[a._v("#")]),a._v(" EXPOSE:")]),a._v(" "),t("blockquote",[t("p",[a._v("格式為 "),t("code",[a._v("EXPOSE <port> [<port>...]")]),a._v("。")])]),a._v(" "),t("p",[a._v("設定 Docker 伺服器容器對外的埠號，供外界使用。在啟動容器時需要透過 -P，Docker 會自動分配一個埠號轉發到指定的埠號。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"env"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[a._v("#")]),a._v(" ENV:")]),a._v(" "),t("blockquote",[t("p",[a._v("格式為 "),t("code",[a._v("ENV <key> <value>。")])])]),a._v(" "),t("p",[a._v("指定一個環境變數，會被後續 RUN 指令使用，並在容器運行時保持。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"copy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[a._v("#")]),a._v(" COPY:")]),a._v(" "),t("blockquote",[t("p",[a._v("格式為 "),t("code",[a._v("COPY <src> <dest>")]),a._v("。")])]),a._v(" "),t("p",[a._v("複製本地端的 "),t("code",[a._v("<src>（為 Dockerfile 所在目錄的相對路徑）到容器中的 <dest>")]),a._v("。當使用本地目錄為根目錄時，推薦使用 COPY。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[a._v("#")]),a._v(" ADD:")]),a._v(" "),t("blockquote",[t("p",[a._v("格式為 "),t("code",[a._v("ADD <src> <dest>")]),a._v("。")])]),a._v(" "),t("p",[a._v("該命令將複製指定的"),t("code",[a._v("<src>")]),a._v(" 到容器中的"),t("code",[a._v("<dest>")]),a._v("。 其中"),t("code",[a._v("<src>")]),a._v("可以是 Dockerfile 所在目錄的相對路徑；也可以是一個 URL；還可以是一個 tar 檔案（其複製後會自動解壓縮）。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[a._v("#")]),a._v(" VOLUME")]),a._v(" "),t("blockquote",[t("p",[a._v('格式為 VOLUME ["/data"]。')])]),a._v(" "),t("p",[a._v("建立一個可以從本地端或其他容器掛載的掛載點，一般用來存放資料庫和需要保存的資料等。")]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"建立自己的-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建立自己的-image"}},[a._v("#")]),a._v(" 建立自己的 image")]),a._v(" "),t("p",[a._v("docker build -t [name] .")]),a._v(" "),t("p",[a._v("這個 build 動作完成後會回覆一個 image id，代表這個 image 建置完成。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker build -t your-name/image-name .\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ol",[t("li",[t("p",[a._v('-t: 一般我們要 commit 到 Docker Hub 的話，會需要針對該Docker Image 製作一個 TAG，之後使用這個 TAG 做 push，透過 "-t" 可以指定該 build 動作到一個 TAG 上。')])]),a._v(" "),t("li",[t("p",[t("code",[a._v(".")]),a._v(": 指向當前目錄的 Dockerfile")])])]),a._v(" "),t("h3",{attrs:{id:"分享到-docker-hub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分享到-docker-hub"}},[a._v("#")]),a._v(" 分享到 Docker hub")]),a._v(" "),t("p",[a._v("最後透過 docker push，即可將該 image push 到 docker hub，供大家使用！(記得要先登入)")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker push your-name/image-name\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"建立-image-背後-docker-engine-做了些什麼"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建立-image-背後-docker-engine-做了些什麼"}},[a._v("#")]),a._v(" 建立 image 背後 docker engine 做了些什麼？")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://i.imgur.com/rzIoHih.png",alt:""}})]),a._v(" "),t("p",[a._v("由圖片可以看出來，我們在主機(macOS)上執行 "),t("code",[a._v("docker build .")]),a._v(" 指令時，整個 docker engine 的 building process。")]),a._v(" "),t("h4",{attrs:{id:"第一個步驟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一個步驟"}},[a._v("#")]),a._v(" 第一個步驟：")]),a._v(" "),t("p",[a._v("會從 docker client 端把 build context 複製到 linux 的 vm 空間下。")]),a._v(" "),t("p",[a._v("build context：本地的 Dockerfile, 和其他檔案。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"第二步驟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二步驟"}},[a._v("#")]),a._v(" 第二步驟：")]),a._v(" "),t("p",[a._v("執行 Dockerfile 第一個指令 (FROM)，創建暫時性的 container01。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"第三步驟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三步驟"}},[a._v("#")]),a._v(" 第三步驟：")]),a._v(" "),t("p",[a._v("以圖片為例，RUN touch file001.txt 在 dockerfile 裡面，重要的指令例如 RUN，都會在原本 container 上再加上一個 layer，而這個 commend 會跟 container01 在創建新的臨時 image01。")]),a._v(" "),t("p",[a._v("docker engine 會再透過 image01 創建新臨時性的 container02。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"第四步驟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第四步驟"}},[a._v("#")]),a._v(" 第四步驟：")]),a._v(" "),t("p",[a._v("接下來討論 "),t("code",[a._v("copy ／src ／dst")]),a._v(" 這個 commend，這裡的 source 指的是在虛擬主機上 Linux OS 的檔案系統們，也就是第一步驟中複製過來。而 distination 是只目前這個臨時性的 container02。")]),a._v(" "),t("p",[a._v("把當案複製過來後，產生名為 import files。當這個完成後，會再次把 container02 跟 commend 打包成臨時 image02。")]),a._v(" "),t("p",[a._v("docker engine 會再透過 image02 創建新臨時性的 container03。")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"第五步驟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第五步驟"}},[a._v("#")]),a._v(" 第五步驟：")]),a._v(" "),t("p",[a._v("就這樣一行 commend 一個 新臨時性的 container，產生到最後的 image 才會結束。")])])}),[],!1,null,null,null);e.default=r.exports}}]);